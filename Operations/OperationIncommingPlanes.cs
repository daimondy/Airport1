using System;
using Airport.Planes;
using Airport.AirportManagement;
using Airport.NotificationManagement;

namespace Airport.Operations
{
    //ОПЕРАЦИЯ ПРИБЫТИЯ САМОЛЕТА
    class OperationIncommingPlanes : IOperation
    {
        private int intervalTimer;

        public OperationIncommingPlanes()
        { }

        public override bool execute() //операция в воздухе
        {
            Console.WriteLine(intervalTimer);
            if (++intervalTimer < Constants.intervalCommingPlane) return true;
            intervalTimer = 0;

            Random random = new Random();

            Plane incommingPlane = Program.readFromFile(random.Next(Program.howManyInFile())); //чтение данных про самолет в файле (.xml)

            incommingPlane.setAfterTechnicalInspection(false); //прибывающий самолет по умолчанию нуждается в техосмотре
            incommingPlane.setAutoGenerated(true); //автоматическая генерация самолета (из списка)

            Double d; 
            while ((d = random.NextDouble()) < 0.4) ; //выбирается число от 0.0 до 1.0, меньшее 0.4
            incommingPlane.setCurrentFuelLevel((int)(d*incommingPlane.getMaxFuelLevel())); //количество топлива из самолета * на число рандома, чтобы случайным образом уменьшить его топливо

            if(incommingPlane is PassengerPlane) //если прибывает самолет (так же работает с кол-вом пассажиров и тп)
            {
                ((PassengerPlane)incommingPlane).setCurrentNumberOfPassengers((int)(d * ((PassengerPlane)incommingPlane).getMaxNumberOfPassengers()));
            }
            else if(incommingPlane is TransportPlane)
            {
                ((TransportPlane)incommingPlane).setCurrentStorageContent((int)(d * ((TransportPlane)incommingPlane).getMaxStorageCapacity()));
            }
            else if(incommingPlane is MilitaryPlane)
            {
                ((MilitaryPlane)incommingPlane).setCurrentAmmo((int)(d * ((MilitaryPlane)incommingPlane).getMaxAmmo()));
            }

            NotificationManager.getInstance().addNotification("Самолет " + incommingPlane.getModelID() + " прибыл в воздушное пространство над аэропортом", NotificationType.Positive);
           
            AirportManager.getInstance().getAirspace().addToAirspace(incommingPlane);

            return true;
        }

        public override Plane getPlane()
        {
            return null;
        }

        public override void stop()
        {

        }
    }
}
